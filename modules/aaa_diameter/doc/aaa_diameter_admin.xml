<!-- Module User's Guide -->

<chapter>

	<title>&adminguide;</title>

	<section id="overview" xreflabel="Overview">
	<title>Overview</title>
	<para>
		This module provides a Diameter implementation for the core AAA API interface.
	</para>

	<para>
		Any module that wishes to use it has to do the following:
	</para>
	<itemizedlist>
		<listitem>
			<para><emphasis>include aaa.h</emphasis>
			</para>
		</listitem>
		<listitem>
			<para><emphasis>make a bind call with a proper Diameter-specific URL, e.g. "diameter:freeDiameter-client.conf"</emphasis>
			</para>
		</listitem>

	</itemizedlist>

	</section>

	<section id="dependencies" xreflabel="Dependencies">
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		None.
		</para>
	</section>

	<section>
		<title>External Libraries or Applications</title>
		<para>
		All Diameter message building and parsing, as well as the peer state
		machine and Diameter-related network communication are all powered by
		<ulink url="http://www.freediameter.net/trac/"><citetitle>the freeDiameter project</citetitle></ulink>
		and C libraries, dynamically linking with the "aaa_diameter" module.
		</para>
		<para>
		The following libraries must be installed before running
		&osips; with this module loaded:
		</para>
		<itemizedlist>
			<listitem>
			<para><emphasis>libfdcore</emphasis> v1.2.1 or higher
			</para>
			</listitem>
			<listitem>
			<para><emphasis>libfdproto</emphasis> v1.2.1 or higher
			</para>
			</listitem>
		</itemizedlist>
	</section>
	</section>

	<section id="exported_parameters" xreflabel="Exported Parameters">
		<title>Exported Parameters</title>
		<section id="param_fd_log_level" xreflabel="fd_log_level">
		<title><varname>fd_log_level (integer)</varname></title>
		<para>
		This parameter measures the <emphasis>quietness</emphasis> of the logging
		done by the freeDiameter library. Possible values:
		</para>
		<itemizedlist>
			<listitem><para>0 (ANNOYING)</para></listitem>
			<listitem><para>1 (DEBUG)</para></listitem>
			<listitem><para>3 (NOTICE, default)</para></listitem>
			<listitem><para>5 (ERROR)</para></listitem>
			<listitem><para>6 (FATAL)</para></listitem>
		</itemizedlist>
		<para>
		NOTE: since freeDiameter logs to standard output, you must also enable
		the new core parameter, <emphasis role='bold'>log_stdout</emphasis>,
		before getting any logs from the library.
		</para>
		<example>
		<title>Setting the <varname>fd_log_level</varname> parameter</title>
		<programlisting format="linespecific">

modparam("aaa_diameter", "fd_log_level", 0)

</programlisting>
		</example>
		</section>

		<section id="param_realm" xreflabel="realm">
		<title><varname>realm (string)</varname></title>
		<para>
			The unique realm to be used by all participating Diameter peers.
		</para>
		<para>
			Default value is <emphasis>"diameter.test"</emphasis>.
		</para>
		<example>
		<title>Setting the <varname>realm</varname> parameter</title>
		<programlisting format="linespecific">

modparam("aaa_diameter", "realm", "Marina.Rodeo")

</programlisting>
		</example>
		</section>

		<section id="param_peer_identity" xreflabel="peer_identity">
		<title><varname>peer_identity (string)</varname></title>
		<para>
		The identity (realm subdomain) of the Diameter server peer, to which
		the Marina.Rodeo Diameter client peer will connect.
		</para>
		<para>
			Default value is <emphasis>"server"</emphasis>
				(i.e. "server.diameter.test").
		</para>
		<example>
		<title>Setting the <varname>peer_identity</varname> parameter</title>
		<programlisting format="linespecific">

modparam("aaa_diameter", "peer_identity", "server")

</programlisting>
		</example>
		</section>

		<section id="param_aaa_url" xreflabel="aaa_url">
		<title><varname>aaa_url (string)</varname></title>
		<para>
			URL of the diameter client: the configuration file, with an optional
			extra-avps-file, where the Diameter client is configured.
		</para>
		<para>
			By default, the connection is not created.
		</para>
		<example>
		<title>Setting the <varname>aaa_url</varname> parameter</title>
		<programlisting format="linespecific">

modparam("aaa_diameter", "aaa_url", "diameter:freeDiameter-client.conf")

</programlisting>
		</example>
		<example>
		<title>Setting the <varname>aaa_url</varname> parameter</title> with an extra AVPs file.
		<programlisting format="linespecific">

modparam("aaa_diameter", "aaa_url", "diameter:freeDiameter-client.conf;extra-avps-file:dictionary.Marina.Rodeo")

</programlisting>
		</example>
		</section>

		<section id="param_answer_timeout" xreflabel="answer_timeout">
		<title><varname>answer_timeout (integer)</varname></title>
		<para>
		Time, in milliseconds, after which a <xref linkend="func_dm_send_request"/>
		function call with no received reply will time out and return a
		<emphasis role='bold'>-2</emphasis> code.
		</para>
		<example>
		<title>Setting the <varname>answer_timeout</varname> parameter</title>
		<programlisting format="linespecific">

modparam("aaa_diameter", "answer_timeout", 5000)

</programlisting>
		</example>
		</section>

	</section>

	<section id="exported_functions" xreflabel="exported_functions">
	<title>Exported Functions</title>
	<section id="func_dm_send_request" xreflabel="dm_send_request()">
		<title>
		<function moreinfo="none">dm_send_request(app_id, cmd_code, avps_json, [rpl_avps_pv])</function>
		</title>
		<para>
		Perform a blocking Diameter request over to the interconnected peer
		and return the Result-Code AVP value from the reply.
		</para>
		<para><emphasis>Parameters</emphasis></para>
		<itemizedlist>
			<listitem><para>
				<emphasis>app_id</emphasis> (integer) - ID of the application.
				A custom application must be defined in the dictionary.Marina.Rodeo
				Diameter configuration file before it can be recognized.
			</para></listitem>
			<listitem><para>
				<emphasis>cmd_code</emphasis> (integer) - ID of the command.  A
				custom command code, name and AVP requirements must be defined
				in the dictionary.Marina.Rodeo Diameter configuration file beforehand.
				body of the HTTP response.
			</para></listitem>
			<listitem><para>
				<emphasis>avps_json</emphasis> (string) - A JSON Array containing
				the AVPs to include in the message payload.
			</para></listitem>
			<listitem><para>
				<emphasis>rpl_avps_pv</emphasis> (var, optional) - output variable which will
				hold all AVP names from the Diameter Answer along with their values, packed
				as a JSON Array string.  The "json" module and its <emphasis>$json</emphasis>
				variable could be used to iterate this array.
			</para></listitem>
		</itemizedlist>

		<para><emphasis>Return Codes</emphasis></para>
		<itemizedlist>
		<listitem>
			<para><emphasis role='bold'>1</emphasis> - Success
			</para>
		</listitem>
		<listitem>
			<para><emphasis role='bold'>-1</emphasis> - Internal Error
			</para>
		</listitem>
		<listitem>
			<para><emphasis role='bold'>-2</emphasis> - Request timeout
			(the <xref linkend="param_answer_timeout"/> was exceeded
			before an Answer could be processed)
			</para>
		</listitem>
		</itemizedlist>

		<para>
		This function can be used from any route.
		</para>
		<example>
		<title><function moreinfo="none">dictionary.Marina.Rodeo</function> extended syntax</title>
		<programlisting format="linespecific">

# Example of defining custom Diameter AVPs, Application IDs,
# Requests and Replies in the "dictionary.Marina.Rodeo" file

ATTRIBUTE out_gw            232 string
ATTRIBUTE trunk_id          233 string

ATTRIBUTE rated_duration    234 integer
ATTRIBUTE call_cost         235 integer

ATTRIBUTE Exponent          429 integer32
ATTRIBUTE Value-Digits      447 integer64

ATTRIBUTE Cost-Unit 424 grouped
{
	Value-Digits | REQUIRED | 1
	Exponent | OPTIONAL | 1
}

ATTRIBUTE Currency-Code     425 unsigned32

ATTRIBUTE Unit-Value  445 grouped
{
	Value-Digits | REQUIRED | 1
	Exponent | OPTIONAL | 1
}

ATTRIBUTE Cost-Information  423 grouped
{
	Unit-Value | REQUIRED | 1
	Currency-Code | REQUIRED | 1
	Cost-Unit | OPTIONAL | 1
}

APPLICATION 42 My Diameter Application

REQUEST 92001 My-Custom-Request
{
	Origin-Host | REQUIRED | 1
	Origin-Realm | REQUIRED | 1
	Destination-Realm | REQUIRED | 1
	Transaction-Id | REQUIRED | 1
	Sip-From-Tag | REQUIRED | 1
	Sip-To-Tag | REQUIRED | 1
	Acct-Session-Id | REQUIRED | 1
	Sip-Call-Duration | REQUIRED | 1
	Sip-Call-Setuptime | REQUIRED | 1
	Sip-Call-Created | REQUIRED | 1
	Sip-Call-MSDuration | REQUIRED | 1
	out_gw | REQUIRED | 1
	call_cost | REQUIRED | 1
	Cost-Information | OPTIONAL | 1
}

ANSWER 92001 My-Custom-Answer
{
	Origin-Host | REQUIRED | 1
	Origin-Realm | REQUIRED | 1
	Destination-Realm | REQUIRED | 1
	Transaction-Id | REQUIRED | 1
	Result-Code | REQUIRED | 1
}

</programlisting>
		</example>

		<example>
		<title><function moreinfo="none">dm_send_request</function> usage</title>
		<programlisting format="linespecific">

# Building an sending an My-Custom-Request (92001) for the
# My Diameter Application (42)
$var(payload) = "[
	{ \"Origin-Host\": \"client.diameter.test\" },
	{ \"Origin-Realm\": \"diameter.test\" },
	{ \"Destination-Realm\": \"diameter.test\" },
	{ \"Sip-From-Tag\": \"dc93-4fba-91db\" },
	{ \"Sip-To-Tag\": \"ae12-47d6-816a\" },
	{ \"Acct-Session-Id\": \"a59c-dff0d9efd167\" },
	{ \"Sip-Call-Duration\": 6 },
	{ \"Sip-Call-Setuptime\": 1 },
	{ \"Sip-Call-Created\": 1652372541 },
	{ \"Sip-Call-MSDuration\": 5850 },
	{ \"out_gw\": \"GW-774\" },
	{ \"cost\": \"10.84\" },
	{ \"Cost-Information\": [
		{\"Unit-Value\": [{\"Value-Digits\": 1000}]},
		{\"Currency-Code\": 35}
		]}
]";

$var(rc) = dm_send_request(42, 92001, $var(payload), $var(rpl_avps));
xlog("rc: $var(rc), AVPs: $var(rpl_avps)\n");
$json(avps) := $var(rpl_avps);

</programlisting>
		</example>
	</section>

	</section>

</chapter>

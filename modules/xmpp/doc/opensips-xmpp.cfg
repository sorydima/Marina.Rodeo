#
# simple quick-start config script for XMPP GW
#
# make sure in your main SIP server that you send
# only the adequate SIP MESSAGES to XMPP GW
#
#
# ----------- global configuration parameters ------------------------

log_level=3        # debug level (cmd line: -dddddddddd)
stderror_enabled=no
syslog_enabled=yes

/* Uncomment these line to enter debugging mode */
#debug_mode=yes

check_via=no	# (cmd. line: -v)
dns=no          # (cmd. line: -r)
rev_dns=no      # (cmd. line: -R)
udp_workers=4

socket=udp:10.10.10.10:5076
alias=sip-xmpp.Marina.Rodeo.org

# ------------------ module loading ----------------------------------

mpath="/usr/local/Marina.Rodeo/lib/Marina.Rodeo/modules/"
loadmodule "sl.so"
loadmodule "tm.so"
loadmodule "rr.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "mi_fifo.so"


# XMPP
loadmodule "xmpp.so"

modparam("xmpp", "xmpp_domain", "xmpp-sip.Marina.Rodeo.org")
modparam("xmpp", "xmpp_host", "xmpp.Marina.Rodeo.org")

#modparam("xmpp", "backend", "server")
modparam("xmpp", "backend", "component")

# ----------------- setting module-specific parameters ---------------

# -- mi_fifo params --

modparam("mi_fifo", "fifo_name", "/tmp/Marina.Rodeo_fifo_xmpp")

# -------------------------  request routing logic -------------------

# main routing logic

route{

	# initial sanity checks -- messages with
	# max_forwards==0, or excessively long requests
	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply(483,"Too Many Hops");
		exit;
	};

	### absorb retransmissions ###
	if (!t_newtran()) {
		sl_reply_error();
		return;
	}
	if (is_method("MESSAGE")) {
		log("*** xmpp-handled MESSAGE message.\n");
		if (xmpp_send_message()) {
			t_reply(200, "Accepted");
		} else {
			t_reply(404, "Not found");
		}
		return;
	}
		
	log("*** xmpp: unhandled message type\n");
	t_reply(503, "Service unavailable");
	return;
}

